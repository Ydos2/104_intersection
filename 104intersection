#!/usr/bin/env python3

import sys
import math

def split(word):
    return [char for char in word]

def h():
    print("USAGE")
    print("\t./104intersection opt xp yp zp xv yv zv p")
    print("")
    print("DESCRIPTION")
    print("\topt\t\tsurface option: 1 for a sphere, 2 for a cylinder, 3 for a cone")
    print("\t(xp, yp, zp)\tcoordinates of a point by which the light ray passes through")
    print("\t(xv, yv, zv)\tcoordinates of a vector parallel to the light rav")
    print("\tp\t\tparameter: radius of the sphere, radius of the cylinder, or")
    print("\t\t\tangle formed by the cone and the Z-axis")

def sphere(av):
    print("Sphere of radius ", av[8], sep= "")
    print("Line passing through the point (", av[2], ", ", av[3], ", ", av[4], ") and parallel to the vector (", av[5], ", ", av[6], ", ", av[7], ")", sep= "")
    a = int(av[5]) * int(av[5]) + int(av[6]) * int(av[6]) + int(av[7]) * int(av[7])
    b = 2 * ((int(av[5]) * int(av[2])) + (int(av[6]) * int(av[3])) + (int(av[7]) * int(av[4])))
    c = int(av[2]) * int(av[2]) + int(av[3]) * int(av[3]) + int(av[4]) * int(av[4]) - int(av[8]) * int(av[8])
    determinant =  (b * b) - (4 * a * c)
    if (determinant < 0):
        print("No intersection point.")
    if (determinant == 0):
        print("1 intersection point:")
        s1 = -b/(2 * a)
        X = int(av[5]) * s1 + int(av[2])
        Y = int(av[6]) * s1 + int(av[3])
        Z = int(av[7]) * s1 + int(av[4])
        print("(","%.3f" % (X), ", ", "%.3f" % (Y), ", ", "%.3f" % Z,")" , sep= "")
    if (determinant > 0):
        print("2 intersection point:")
        s1 = -b + math.sqrt(determinant)/(2*a)
        s2 = -b - math.sqrt(determinant)/(2*a)
        X2 = int(av[5]) * s2 + int(av[2])
        Y2 = int(av[6]) * s2 + int(av[3])
        Z2 = int(av[7]) * s2 + int(av[4])
        print("(","%.3f" % X1, ", ", Y1, ", ", Z1,")" , sep= "")
        print("(","%.3f" % (X2), ", ", "%.3f" % (Y2), ", ", "%.3f" % Z2,")" , sep= "")

def cylinder(av):
    print("Cylinder of radius ", av[8])
    print("Line passing through the point (", av[2], ", ", av[3], ", ", av[4], ") and parallel to the vector (", av[5], ", ", av[6], ", ", av[7], ")", sep= "")
    a = int(av[5]) * int(av[5]) + int(av[6]) * int(av[6])
    b = 2 * ((int(av[5]) * int(av[2])) + (int(av[6]) * int(av[3])))
    c = int(av[2]) * int(av[2]) + int(av[3]) * int(av[3]) - int(av[8]) * int(av[8])
    determinant =  (b * b) - (4 * a * c)
    if (determinant < 0):
        print("No intersection point.")
    if (determinant == 0):
        print("1 intersection point:")
        s1 = -b/(2 * a)
        X = int(av[5]) * s1 + int(av[2])
        Y = int(av[6]) * s1 + int(av[3])
        Z = int(av[7]) * s1 + int(av[4])
        print("(","%.3f" % (X), ", ", "%.3f" % (Y), ", ", "%.3f" % Z,")" , sep= "")
    if (determinant > 0):
        print("2 intersection point:")
        s1 = -b + math.sqrt(determinant)/(2*a)
        s2 = -b - math.sqrt(determinant)/(2*a)
        X1 = int(av[5]) * s1 + int(av[2])
        Y1 = int(av[6]) * s1 + int(av[3])
        Z1 = int(av[7]) * s1 + int(av[4])
        X2 = int(av[5]) * s2 + int(av[2])
        Y2 = int(av[6]) * s2 + int(av[3])
        Z2 = int(av[7]) * s2 + int(av[4])
        print("(","%.3f" % X1, ", ", "%.3f" % Y1, ", ","%.3f" % Z1,")" , sep= "")
        print("(","%.3f" % (X2), ", ", "%.3f" % (Y2), ", ", "%.3f" % Z2,")" , sep= "")

def cone(av):
    print("Cone with a ", av[8], "degree angle")
    print("Line passing through the point (", av[2], ", ", av[3], ", ", av[4], ") and parallel to the vector (", av[5], ", ", av[6], ", ", av[7], ")", sep= "")

def shape(av):
    if (av[1] == "1"):
        sphere(av)
    if (av[1] == "2"):
        cylinder(av)
    if (av[1] == "3"):
        cone(av)

def main():
    try :
        av = sys.argv
        l = len(sys.argv)
        if (av[1] == "-h"):
            h()
        else:
            if (l == 9):
                shape(av)
            else:
                exit(84)
    except :
        exit(84)

if __name__ == "__main__":
    main()